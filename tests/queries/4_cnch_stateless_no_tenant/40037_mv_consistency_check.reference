Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ TableScan test.base40037 est. ? rows
                        Outputs: [click, event_date, server_time, uid]
Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ Filter est. ? rows
                  │     Condition: event_date = cast(19358, \'Date\')
                  └─ TableScan test.base40037 est. ? rows
                           Outputs: [click, event_date, server_time, uid]
Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ Filter est. ? rows
                  │     Condition: toHour(toDateTime(server_time)) = 8
                  └─ TableScan test.base40037 est. ? rows
                           Outputs: [click, event_date, server_time, uid]
Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ Filter est. ? rows
                  │     Condition: (event_date >= cast(19358, \'Date\')) AND (event_date <= cast(19367, \'Date\'))
                  └─ TableScan test.base40037 est. ? rows
                           Outputs: [click, event_date, server_time, uid]
Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ Filter est. ? rows
                  │     Condition: toHour(toDateTime(server_time)) IN (9, 10, 11)
                  └─ TableScan test.base40037 est. ? rows
                           Outputs: [click, event_date, server_time, uid]
Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ TableScan test.base40037 est. ? rows
                        Outputs: [click, event_date, server_time, uid]
Projection est. ? rows
│     Expressions: [event_date, uid], server_time_hour:=`expr#toHour(toDateTime(server_time))`, sum_click:=`expr#sum(click)`
└─ Gather Exchange est. ? rows
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {event_date, expr#toHour(toDateTime(server_time)), uid}
         └─ Aggregating est. ? rows
            │     Group by: {event_date, expr#toHour(toDateTime(server_time)), uid}
            │     Aggregates: expr#sum(click):=AggNull(sum)(click)
            └─ Projection est. ? rows
               │     Expressions: [click, event_date, uid], expr#toHour(toDateTime(server_time)):=toHour(toDateTime(server_time))
               └─ Filter est. ? rows
                  │     Condition: event_date = cast(19358, \'Date\')
                  └─ TableScan test.base40037 est. ? rows
                           Outputs: [click, event_date, server_time, uid]
