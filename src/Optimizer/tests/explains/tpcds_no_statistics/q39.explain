Projection est. ? rows
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2`, d_moy:=d_moy_1, d_moy_1:=d_moy_2, i_item_sk:=i_item_sk_1, i_item_sk_1:=i_item_sk_2, mean:=`expr#avg(inv_quantity_on_hand)_1`, mean_1:=`expr#avg(inv_quantity_on_hand)_2`, w_warehouse_sk:=w_warehouse_sk_1, w_warehouse_sk_1:=w_warehouse_sk_2
└─ Sorting est. ? rows
   │     Order by: {w_warehouse_sk_1 asc, i_item_sk_1 asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {w_warehouse_sk_1 asc, i_item_sk_1 asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc}
         └─ Inner Join est. ? rows
            │     Condition: i_item_sk_1 == i_item_sk_2, w_warehouse_sk_1 == w_warehouse_sk_2
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {i_item_sk_1, w_warehouse_sk_1}
            │  └─ Filter est. ? rows
            │     │     Condition: d_moy_1 = 1
            │     └─ CTERef [0] est. ? rows
            └─ Repartition Exchange est. ? rows
               │     Partition by: {i_item_sk_2, w_warehouse_sk_2}
               └─ Filter est. ? rows
                  │     Condition: d_moy_2 = 2
                  └─ CTERef [0] est. ? rows
CTEDef [0]
Projection est. ? rows
│     Expressions: [d_moy, expr#avg(inv_quantity_on_hand), i_item_sk, w_warehouse_sk], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean)):=caseWithExpression(`expr#avg(inv_quantity_on_hand)`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)` / `expr#avg(inv_quantity_on_hand)`)
└─ Filter est. ? rows
   │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)` / `expr#avg(inv_quantity_on_hand)`) > 1
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {d_moy, i_item_sk, w_warehouse_name, w_warehouse_sk}
         └─ Aggregating est. ? rows
            │     Group by: {d_moy, i_item_sk, w_warehouse_name, w_warehouse_sk}
            │     Aggregates: expr#stddevSamp(inv_quantity_on_hand):=AggNull(stddevSamp)(inv_quantity_on_hand), expr#avg(inv_quantity_on_hand):=AggNull(avg)(inv_quantity_on_hand)
            └─ Inner Join est. ? rows
               │     Condition: inv_date_sk == d_date_sk
               ├─ Repartition Exchange est. ? rows
               │  │     Partition by: {inv_date_sk}
               │  └─ Inner Join est. ? rows
               │     │     Condition: inv_warehouse_sk == w_warehouse_sk
               │     ├─ Repartition Exchange est. ? rows
               │     │  │     Partition by: {inv_warehouse_sk}
               │     │  └─ Inner Join est. ? rows
               │     │     │     Condition: inv_item_sk == i_item_sk
               │     │     ├─ Repartition Exchange est. ? rows
               │     │     │  │     Partition by: {inv_item_sk}
               │     │     │  └─ TableScan tpcds.inventory est. ? rows
               │     │     │           Outputs: [inv_date_sk, inv_item_sk, inv_quantity_on_hand, inv_warehouse_sk]
               │     │     └─ Repartition Exchange est. ? rows
               │     │        │     Partition by: {i_item_sk}
               │     │        └─ TableScan tpcds.item est. ? rows
               │     │                 Outputs: [i_item_sk]
               │     └─ Repartition Exchange est. ? rows
               │        │     Partition by: {w_warehouse_sk}
               │        └─ TableScan tpcds.warehouse est. ? rows
               │                 Outputs: [w_warehouse_name, w_warehouse_sk]
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {d_date_sk}
                  └─ Filter est. ? rows
                     │     Condition: (d_year = 2001) AND (d_moy IN (1, 2))
                     └─ TableScan tpcds.date_dim est. ? rows
                              Outputs: [d_date_sk, d_moy, d_year]
note: CTE(Common Table Expression) is applied for 2 times.
Projection est. ? rows
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_10`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_11`, d_moy:=d_moy_10, d_moy_1:=d_moy_11, i_item_sk:=i_item_sk_10, i_item_sk_1:=i_item_sk_11, mean:=`expr#avg(inv_quantity_on_hand)_10`, mean_1:=`expr#avg(inv_quantity_on_hand)_11`, w_warehouse_sk:=w_warehouse_sk_10, w_warehouse_sk_1:=w_warehouse_sk_11
└─ Sorting est. ? rows
   │     Order by: {w_warehouse_sk_10 asc, i_item_sk_10 asc, d_moy_10 asc, expr#avg(inv_quantity_on_hand)_10 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_10 asc, d_moy_11 asc, expr#avg(inv_quantity_on_hand)_11 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_11 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {w_warehouse_sk_10 asc, i_item_sk_10 asc, d_moy_10 asc, expr#avg(inv_quantity_on_hand)_10 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_10 asc, d_moy_11 asc, expr#avg(inv_quantity_on_hand)_11 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_11 asc}
         └─ Inner Join est. ? rows
            │     Condition: i_item_sk_10 == i_item_sk_11, w_warehouse_sk_10 == w_warehouse_sk_11
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {i_item_sk_10, w_warehouse_sk_10}
            │  └─ Filter est. ? rows
            │     │     Condition: (`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_10` > 1.5) AND (d_moy_10 = 1)
            │     └─ CTERef [0] est. ? rows
            └─ Repartition Exchange est. ? rows
               │     Partition by: {i_item_sk_11, w_warehouse_sk_11}
               └─ Filter est. ? rows
                  │     Condition: d_moy_11 = 2
                  └─ CTERef [0] est. ? rows
CTEDef [0]
Projection est. ? rows
│     Expressions: [d_moy_9, expr#avg(inv_quantity_on_hand)_9, i_item_sk_9, w_warehouse_sk_9], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_9:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_9`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_9` / `expr#avg(inv_quantity_on_hand)_9`)
└─ Filter est. ? rows
   │     Condition: ((d_moy_9 = 2) OR ((caseWithExpression(`expr#avg(inv_quantity_on_hand)_9`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_9` / `expr#avg(inv_quantity_on_hand)_9`) > 1.5) AND (d_moy_9 = 1))) AND (caseWithExpression(`expr#avg(inv_quantity_on_hand)_9`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_9` / `expr#avg(inv_quantity_on_hand)_9`) > 1)
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {d_moy_9, i_item_sk_9, w_warehouse_name_9, w_warehouse_sk_9}
         └─ Aggregating est. ? rows
            │     Group by: {d_moy_9, i_item_sk_9, w_warehouse_name_9, w_warehouse_sk_9}
            │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_9:=AggNull(stddevSamp)(inv_quantity_on_hand_7), expr#avg(inv_quantity_on_hand)_9:=AggNull(avg)(inv_quantity_on_hand_7)
            └─ Inner Join est. ? rows
               │     Condition: inv_date_sk_7 == d_date_sk_7
               ├─ Repartition Exchange est. ? rows
               │  │     Partition by: {inv_date_sk_7}
               │  └─ Inner Join est. ? rows
               │     │     Condition: inv_warehouse_sk_7 == w_warehouse_sk_9
               │     ├─ Repartition Exchange est. ? rows
               │     │  │     Partition by: {inv_warehouse_sk_7}
               │     │  └─ Inner Join est. ? rows
               │     │     │     Condition: inv_item_sk_7 == i_item_sk_9
               │     │     ├─ Repartition Exchange est. ? rows
               │     │     │  │     Partition by: {inv_item_sk_7}
               │     │     │  └─ TableScan tpcds.inventory est. ? rows
               │     │     │           Outputs: inv_date_sk_7:=inv_date_sk, inv_item_sk_7:=inv_item_sk, inv_quantity_on_hand_7:=inv_quantity_on_hand, inv_warehouse_sk_7:=inv_warehouse_sk
               │     │     └─ Repartition Exchange est. ? rows
               │     │        │     Partition by: {i_item_sk_9}
               │     │        └─ TableScan tpcds.item est. ? rows
               │     │                 Outputs: i_item_sk_9:=i_item_sk
               │     └─ Repartition Exchange est. ? rows
               │        │     Partition by: {w_warehouse_sk_9}
               │        └─ TableScan tpcds.warehouse est. ? rows
               │                 Outputs: w_warehouse_name_9:=w_warehouse_name, w_warehouse_sk_9:=w_warehouse_sk
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {d_date_sk_7}
                  └─ Filter est. ? rows
                     │     Condition: d_year_7 = 2001
                     └─ TableScan tpcds.date_dim est. ? rows
                              Outputs: d_date_sk_7:=d_date_sk, d_moy_9:=d_moy, d_year_7:=d_year
note: CTE(Common Table Expression) is applied for 2 times.
