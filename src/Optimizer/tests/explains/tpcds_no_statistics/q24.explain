Projection est. ? rows
│     Expressions: c_first_name:=c_first_name_1, c_last_name:=c_last_name_1, paid:=`expr#sum(netpaid)`, s_store_name:=s_store_name_1
└─ Sorting est. ? rows
   │     Order by: {c_last_name_1 asc, c_first_name_1 asc, s_store_name_1 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {c_last_name_1 asc, c_first_name_1 asc, s_store_name_1 asc}
         └─ Inner Join est. ? rows
            │     Condition: 
            │     Filter: `expr#sum(netpaid)` > `expr#multiply(CAST('0.05', 'Decimal(18, 2)'), avg(netpaid))`
            ├─ MergingAggregated est. ? rows
            │  └─ Repartition Exchange est. ? rows
            │     │     Partition by: {c_first_name_1, c_last_name_1, s_store_name_1}
            │     └─ Aggregating est. ? rows
            │        │     Group by: {c_first_name_1, c_last_name_1, s_store_name_1}
            │        │     Aggregates: expr#sum(netpaid):=AggNull(sum)(expr#sum(ss_net_paid)_1)
            │        └─ Filter est. ? rows
            │           │     Condition: i_color_1 = 'peach'
            │           └─ CTERef [0] est. ? rows
            └─ Broadcast Exchange est. ? rows
               └─ Projection est. ? rows
                  │     Expressions: expr#multiply(CAST('0.05', 'Decimal(18, 2)'), avg(netpaid)):='0.05' * `expr#avg(netpaid)`
                  └─ MergingAggregated est. ? rows
                     └─ Gather Exchange est. ? rows
                        └─ Aggregating est. ? rows
                           │     Group by: {}
                           │     Aggregates: expr#avg(netpaid):=AggNull(avg)(expr#sum(ss_net_paid)_2)
                           └─ CTERef [0] est. ? rows
CTEDef [0]
Projection est. ? rows
│     Expressions: [c_first_name, c_last_name, expr#sum(ss_net_paid), i_color, s_store_name]
└─ MergingAggregated est. ? rows
   └─ Repartition Exchange est. ? rows
      │     Partition by: {c_first_name, c_last_name, ca_state, i_color, i_current_price, i_manager_id, i_size, i_units, s_state, s_store_name}
      └─ Aggregating est. ? rows
         │     Group by: {c_first_name, c_last_name, ca_state, i_color, i_current_price, i_manager_id, i_size, i_units, s_state, s_store_name}
         │     Aggregates: expr#sum(ss_net_paid):=AggNull(sum)(ss_net_paid)
         └─ Inner Join est. ? rows
            │     Condition: c_current_addr_sk == ca_address_sk, s_zip == ca_zip
            │     Filter: c_birth_country != upper(ca_country)
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {c_current_addr_sk, s_zip}
            │  └─ Inner Join est. ? rows
            │     │     Condition: ss_customer_sk == c_customer_sk
            │     ├─ Repartition Exchange est. ? rows
            │     │  │     Partition by: {ss_customer_sk}
            │     │  └─ Inner Join est. ? rows
            │     │     │     Condition: sr_item_sk == i_item_sk
            │     │     ├─ Repartition Exchange est. ? rows
            │     │     │  │     Partition by: {sr_item_sk}
            │     │     │  └─ Inner Join est. ? rows
            │     │     │     │     Condition: ss_store_sk == s_store_sk
            │     │     │     ├─ Repartition Exchange est. ? rows
            │     │     │     │  │     Partition by: {ss_store_sk}
            │     │     │     │  └─ Inner Join est. ? rows
            │     │     │     │     │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
            │     │     │     │     ├─ Repartition Exchange est. ? rows
            │     │     │     │     │  │     Partition by: {ss_item_sk, ss_ticket_number}
            │     │     │     │     │  └─ TableScan tpcds.store_sales est. ? rows
            │     │     │     │     │           Outputs: [ss_customer_sk, ss_item_sk, ss_net_paid, ss_store_sk, ss_ticket_number]
            │     │     │     │     └─ Repartition Exchange est. ? rows
            │     │     │     │        │     Partition by: {sr_item_sk, sr_ticket_number}
            │     │     │     │        └─ TableScan tpcds.store_returns est. ? rows
            │     │     │     │                 Outputs: [sr_item_sk, sr_ticket_number]
            │     │     │     └─ Repartition Exchange est. ? rows
            │     │     │        │     Partition by: {s_store_sk}
            │     │     │        └─ Filter est. ? rows
            │     │     │           │     Condition: s_market_id = 8
            │     │     │           └─ TableScan tpcds.store est. ? rows
            │     │     │                    Outputs: [s_market_id, s_state, s_store_name, s_store_sk, s_zip]
            │     │     └─ Repartition Exchange est. ? rows
            │     │        │     Partition by: {i_item_sk}
            │     │        └─ TableScan tpcds.item est. ? rows
            │     │                 Outputs: [i_color, i_current_price, i_item_sk, i_manager_id, i_size, i_units]
            │     └─ Repartition Exchange est. ? rows
            │        │     Partition by: {c_customer_sk}
            │        └─ TableScan tpcds.customer est. ? rows
            │                 Outputs: [c_birth_country, c_current_addr_sk, c_customer_sk, c_first_name, c_last_name]
            └─ Repartition Exchange est. ? rows
               │     Partition by: {ca_address_sk, ca_zip}
               └─ TableScan tpcds.customer_address est. ? rows
                        Outputs: [ca_address_sk, ca_country, ca_state, ca_zip]
note: CTE(Common Table Expression) is applied for 2 times.
Projection est. ? rows
│     Expressions: c_first_name:=c_first_name_7, c_last_name:=c_last_name_7, paid:=`expr#sum(netpaid)_1`, s_store_name:=s_store_name_7
└─ Sorting est. ? rows
   │     Order by: {c_last_name_7 asc, c_first_name_7 asc, s_store_name_7 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {c_last_name_7 asc, c_first_name_7 asc, s_store_name_7 asc}
         └─ Inner Join est. ? rows
            │     Condition: 
            │     Filter: `expr#sum(netpaid)_1` > `expr#multiply(CAST('0.05', 'Decimal(18, 2)'), avg(netpaid))_1`
            ├─ MergingAggregated est. ? rows
            │  └─ Repartition Exchange est. ? rows
            │     │     Partition by: {c_first_name_7, c_last_name_7, s_store_name_7}
            │     └─ Aggregating est. ? rows
            │        │     Group by: {c_first_name_7, c_last_name_7, s_store_name_7}
            │        │     Aggregates: expr#sum(netpaid)_1:=AggNull(sum)(expr#sum(ss_net_paid)_7)
            │        └─ Filter est. ? rows
            │           │     Condition: i_color_7 = 'saddle'
            │           └─ CTERef [0] est. ? rows
            └─ Broadcast Exchange est. ? rows
               └─ Projection est. ? rows
                  │     Expressions: expr#multiply(CAST('0.05', 'Decimal(18, 2)'), avg(netpaid))_1:='0.05' * `expr#avg(netpaid)_1`
                  └─ MergingAggregated est. ? rows
                     └─ Gather Exchange est. ? rows
                        └─ Aggregating est. ? rows
                           │     Group by: {}
                           │     Aggregates: expr#avg(netpaid)_1:=AggNull(avg)(expr#sum(ss_net_paid)_8)
                           └─ CTERef [0] est. ? rows
CTEDef [0]
Projection est. ? rows
│     Expressions: [c_first_name_6, c_last_name_6, expr#sum(ss_net_paid)_6, i_color_6, s_store_name_6]
└─ MergingAggregated est. ? rows
   └─ Repartition Exchange est. ? rows
      │     Partition by: {c_first_name_6, c_last_name_6, ca_state_6, i_color_6, i_current_price_6, i_manager_id_6, i_size_6, i_units_6, s_state_6, s_store_name_6}
      └─ Aggregating est. ? rows
         │     Group by: {c_first_name_6, c_last_name_6, ca_state_6, i_color_6, i_current_price_6, i_manager_id_6, i_size_6, i_units_6, s_state_6, s_store_name_6}
         │     Aggregates: expr#sum(ss_net_paid)_6:=AggNull(sum)(ss_net_paid_4)
         └─ Inner Join est. ? rows
            │     Condition: c_current_addr_sk_4 == ca_address_sk_4, s_zip_4 == ca_zip_4
            │     Filter: c_birth_country_4 != upper(ca_country_4)
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {c_current_addr_sk_4, s_zip_4}
            │  └─ Inner Join est. ? rows
            │     │     Condition: ss_customer_sk_4 == c_customer_sk_4
            │     ├─ Repartition Exchange est. ? rows
            │     │  │     Partition by: {ss_customer_sk_4}
            │     │  └─ Inner Join est. ? rows
            │     │     │     Condition: sr_item_sk_4 == i_item_sk_4
            │     │     ├─ Repartition Exchange est. ? rows
            │     │     │  │     Partition by: {sr_item_sk_4}
            │     │     │  └─ Inner Join est. ? rows
            │     │     │     │     Condition: ss_store_sk_4 == s_store_sk_4
            │     │     │     ├─ Repartition Exchange est. ? rows
            │     │     │     │  │     Partition by: {ss_store_sk_4}
            │     │     │     │  └─ Inner Join est. ? rows
            │     │     │     │     │     Condition: ss_item_sk_4 == sr_item_sk_4, ss_ticket_number_4 == sr_ticket_number_4
            │     │     │     │     ├─ Repartition Exchange est. ? rows
            │     │     │     │     │  │     Partition by: {ss_item_sk_4, ss_ticket_number_4}
            │     │     │     │     │  └─ TableScan tpcds.store_sales est. ? rows
            │     │     │     │     │           Outputs: ss_customer_sk_4:=ss_customer_sk, ss_item_sk_4:=ss_item_sk, ss_net_paid_4:=ss_net_paid, ss_store_sk_4:=ss_store_sk, ss_ticket_number_4:=ss_ticket_number
            │     │     │     │     └─ Repartition Exchange est. ? rows
            │     │     │     │        │     Partition by: {sr_item_sk_4, sr_ticket_number_4}
            │     │     │     │        └─ TableScan tpcds.store_returns est. ? rows
            │     │     │     │                 Outputs: sr_item_sk_4:=sr_item_sk, sr_ticket_number_4:=sr_ticket_number
            │     │     │     └─ Repartition Exchange est. ? rows
            │     │     │        │     Partition by: {s_store_sk_4}
            │     │     │        └─ Filter est. ? rows
            │     │     │           │     Condition: s_market_id_4 = 8
            │     │     │           └─ TableScan tpcds.store est. ? rows
            │     │     │                    Outputs: s_market_id_4:=s_market_id, s_state_6:=s_state, s_store_name_6:=s_store_name, s_store_sk_4:=s_store_sk, s_zip_4:=s_zip
            │     │     └─ Repartition Exchange est. ? rows
            │     │        │     Partition by: {i_item_sk_4}
            │     │        └─ TableScan tpcds.item est. ? rows
            │     │                 Outputs: i_color_6:=i_color, i_current_price_6:=i_current_price, i_item_sk_4:=i_item_sk, i_manager_id_6:=i_manager_id, i_size_6:=i_size, i_units_6:=i_units
            │     └─ Repartition Exchange est. ? rows
            │        │     Partition by: {c_customer_sk_4}
            │        └─ TableScan tpcds.customer est. ? rows
            │                 Outputs: c_birth_country_4:=c_birth_country, c_current_addr_sk_4:=c_current_addr_sk, c_customer_sk_4:=c_customer_sk, c_first_name_6:=c_first_name, c_last_name_6:=c_last_name
            └─ Repartition Exchange est. ? rows
               │     Partition by: {ca_address_sk_4, ca_zip_4}
               └─ TableScan tpcds.customer_address est. ? rows
                        Outputs: ca_address_sk_4:=ca_address_sk, ca_country_4:=ca_country, ca_state_6:=ca_state, ca_zip_4:=ca_zip
note: CTE(Common Table Expression) is applied for 2 times.
