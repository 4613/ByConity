Projection
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2`, d_moy:=d_moy_1, d_moy_1:=d_moy_2, i_item_sk:=i_item_sk_1, i_item_sk_1:=i_item_sk_2, mean:=`expr#avg(inv_quantity_on_hand)_1`, mean_1:=`expr#avg(inv_quantity_on_hand)_2`, w_warehouse_sk:=w_warehouse_sk_1, w_warehouse_sk_1:=w_warehouse_sk_2
└─ Sorting
   │     Order by: {w_warehouse_sk_1 asc, i_item_sk_1 asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc}
   └─ Gather Exchange
      └─ Sorting
         │     Order by: {w_warehouse_sk_1 asc, i_item_sk_1 asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc}
         └─ Inner Join
            │     Condition: i_item_sk_1 == i_item_sk_2, w_warehouse_sk_1 == w_warehouse_sk_2
            │     Runtime Filters Builder: {i_item_sk_2}
            ├─ Projection
            │  │     Expressions: d_moy_1:=d_moy_3, expr#avg(inv_quantity_on_hand)_1:=`expr#avg(inv_quantity_on_hand)_3`, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`), i_item_sk_1:=i_item_sk_3, w_warehouse_sk_1:=w_warehouse_sk_3
            │  └─ Filter
            │     │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`) > 1
            │     └─ Aggregating
            │        │     Group by: {d_moy_3, i_item_sk_3, w_warehouse_name_3, w_warehouse_sk_3}
            │        │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_3:=AggNull(stddevSamp)(inv_quantity_on_hand_1), expr#avg(inv_quantity_on_hand)_3:=AggNull(avg)(inv_quantity_on_hand_1)
            │        └─ Inner Join
            │           │     Condition: inv_warehouse_sk_1 == w_warehouse_sk_3
            │           ├─ Inner Join
            │           │  │     Condition: inv_item_sk_1 == i_item_sk_3
            │           │  ├─ Repartition Exchange
            │           │  │  │     Partition by: {inv_item_sk_1}
            │           │  │  └─ Inner Join
            │           │  │     │     Condition: inv_date_sk_1 == d_date_sk_1
            │           │  │     │     Runtime Filters Builder: {d_date_sk_1}
            │           │  │     ├─ Filter
            │           │  │     │  │     Condition: Runtime Filters: {inv_date_sk_1}
            │           │  │     │  └─ TableScan tpcds100.inventory
            │           │  │     │           Where: Runtime Filters: {inv_date_sk}
            │           │  │     │           Outputs: inv_date_sk_1:=inv_date_sk, inv_item_sk_1:=inv_item_sk, inv_quantity_on_hand_1:=inv_quantity_on_hand, inv_warehouse_sk_1:=inv_warehouse_sk
            │           │  │     └─ Broadcast Exchange
            │           │  │        └─ Filter
            │           │  │           │     Condition: (d_year_1 = 2001) AND (d_moy_3 = 1)
            │           │  │           └─ TableScan tpcds100.date_dim
            │           │  │                    Where: (d_year = 2001) AND (d_moy = 1)
            │           │  │                    Outputs: d_date_sk_1:=d_date_sk, d_moy_3:=d_moy, d_year_1:=d_year
            │           │  └─ Repartition Exchange
            │           │     │     Partition by: {i_item_sk_3}
            │           │     └─ Filter
            │           │        │     Condition: Runtime Filters: {i_item_sk_3}
            │           │        └─ TableScan tpcds100.item
            │           │                 Where: Runtime Filters: {i_item_sk}
            │           │                 Outputs: i_item_sk_3:=i_item_sk
            │           └─ Broadcast Exchange
            │              └─ TableScan tpcds100.warehouse
            │                       Outputs: w_warehouse_name_3:=w_warehouse_name, w_warehouse_sk_3:=w_warehouse_sk
            └─ Projection
               │     Expressions: d_moy_2:=d_moy_4, expr#avg(inv_quantity_on_hand)_2:=`expr#avg(inv_quantity_on_hand)_4`, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_4`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_4` / `expr#avg(inv_quantity_on_hand)_4`), i_item_sk_2:=i_item_sk_4, w_warehouse_sk_2:=w_warehouse_sk_4
               └─ Filter
                  │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)_4`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_4` / `expr#avg(inv_quantity_on_hand)_4`) > 1
                  └─ Aggregating
                     │     Group by: {d_moy_4, i_item_sk_4, w_warehouse_name_4, w_warehouse_sk_4}
                     │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_4:=AggNull(stddevSamp)(inv_quantity_on_hand_2), expr#avg(inv_quantity_on_hand)_4:=AggNull(avg)(inv_quantity_on_hand_2)
                     └─ Inner Join
                        │     Condition: inv_warehouse_sk_2 == w_warehouse_sk_4
                        ├─ Inner Join
                        │  │     Condition: inv_item_sk_2 == i_item_sk_4
                        │  ├─ Repartition Exchange
                        │  │  │     Partition by: {inv_item_sk_2}
                        │  │  └─ Inner Join
                        │  │     │     Condition: inv_date_sk_2 == d_date_sk_2
                        │  │     │     Runtime Filters Builder: {d_date_sk_2}
                        │  │     ├─ Filter
                        │  │     │  │     Condition: Runtime Filters: {inv_date_sk_2}
                        │  │     │  └─ TableScan tpcds100.inventory
                        │  │     │           Where: Runtime Filters: {inv_date_sk}
                        │  │     │           Outputs: inv_date_sk_2:=inv_date_sk, inv_item_sk_2:=inv_item_sk, inv_quantity_on_hand_2:=inv_quantity_on_hand, inv_warehouse_sk_2:=inv_warehouse_sk
                        │  │     └─ Broadcast Exchange
                        │  │        └─ Filter
                        │  │           │     Condition: (d_year_2 = 2001) AND (d_moy_4 = 2)
                        │  │           └─ TableScan tpcds100.date_dim
                        │  │                    Where: (d_year = 2001) AND (d_moy = 2)
                        │  │                    Outputs: d_date_sk_2:=d_date_sk, d_moy_4:=d_moy, d_year_2:=d_year
                        │  └─ Repartition Exchange
                        │     │     Partition by: {i_item_sk_4}
                        │     └─ TableScan tpcds100.item
                        │              Outputs: i_item_sk_4:=i_item_sk
                        └─ Broadcast Exchange
                           └─ TableScan tpcds100.warehouse
                                    Outputs: w_warehouse_name_4:=w_warehouse_name, w_warehouse_sk_4:=w_warehouse_sk
note: Runtime Filter is applied for 3 times.
Projection
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_6`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_7`, d_moy:=d_moy_6, d_moy_1:=d_moy_7, i_item_sk:=i_item_sk_6, i_item_sk_1:=i_item_sk_7, mean:=`expr#avg(inv_quantity_on_hand)_6`, mean_1:=`expr#avg(inv_quantity_on_hand)_7`, w_warehouse_sk:=w_warehouse_sk_6, w_warehouse_sk_1:=w_warehouse_sk_7
└─ Sorting
   │     Order by: {w_warehouse_sk_6 asc, i_item_sk_6 asc, d_moy_6 asc, expr#avg(inv_quantity_on_hand)_6 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_6 asc, d_moy_7 asc, expr#avg(inv_quantity_on_hand)_7 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_7 asc}
   └─ Gather Exchange
      └─ Sorting
         │     Order by: {w_warehouse_sk_6 asc, i_item_sk_6 asc, d_moy_6 asc, expr#avg(inv_quantity_on_hand)_6 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_6 asc, d_moy_7 asc, expr#avg(inv_quantity_on_hand)_7 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_7 asc}
         └─ Inner Join
            │     Condition: i_item_sk_6 == i_item_sk_7, w_warehouse_sk_6 == w_warehouse_sk_7
            │     Runtime Filters Builder: {i_item_sk_7}
            ├─ Projection
            │  │     Expressions: d_moy_6:=d_moy_8, expr#avg(inv_quantity_on_hand)_6:=`expr#avg(inv_quantity_on_hand)_8`, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_6:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_8`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_8` / `expr#avg(inv_quantity_on_hand)_8`), i_item_sk_6:=i_item_sk_8, w_warehouse_sk_6:=w_warehouse_sk_8
            │  └─ Filter
            │     │     Condition: (caseWithExpression(`expr#avg(inv_quantity_on_hand)_8`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_8` / `expr#avg(inv_quantity_on_hand)_8`) > 1) AND (((d_moy_8 = 1) AND (caseWithExpression(`expr#avg(inv_quantity_on_hand)_8`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_8` / `expr#avg(inv_quantity_on_hand)_8`) > 1.5)) OR (d_moy_8 = 2)) AND (caseWithExpression(`expr#avg(inv_quantity_on_hand)_8`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_8` / `expr#avg(inv_quantity_on_hand)_8`) > 1.5)
            │     └─ Aggregating
            │        │     Group by: {d_moy_8, i_item_sk_8, w_warehouse_name_8, w_warehouse_sk_8}
            │        │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_8:=AggNull(stddevSamp)(inv_quantity_on_hand_4), expr#avg(inv_quantity_on_hand)_8:=AggNull(avg)(inv_quantity_on_hand_4)
            │        └─ Inner Join
            │           │     Condition: inv_date_sk_4 == d_date_sk_4
            │           ├─ Inner Join
            │           │  │     Condition: inv_warehouse_sk_4 == w_warehouse_sk_8
            │           │  ├─ Inner Join
            │           │  │  │     Condition: inv_item_sk_4 == i_item_sk_8
            │           │  │  ├─ Repartition Exchange
            │           │  │  │  │     Partition by: {inv_item_sk_4}
            │           │  │  │  └─ TableScan tpcds100.inventory
            │           │  │  │           Outputs: inv_date_sk_4:=inv_date_sk, inv_item_sk_4:=inv_item_sk, inv_quantity_on_hand_4:=inv_quantity_on_hand, inv_warehouse_sk_4:=inv_warehouse_sk
            │           │  │  └─ Repartition Exchange
            │           │  │     │     Partition by: {i_item_sk_8}
            │           │  │     └─ Filter
            │           │  │        │     Condition: Runtime Filters: {i_item_sk_8}
            │           │  │        └─ TableScan tpcds100.item
            │           │  │                 Where: Runtime Filters: {i_item_sk}
            │           │  │                 Outputs: i_item_sk_8:=i_item_sk
            │           │  └─ Broadcast Exchange
            │           │     └─ TableScan tpcds100.warehouse
            │           │              Outputs: w_warehouse_name_8:=w_warehouse_name, w_warehouse_sk_8:=w_warehouse_sk
            │           └─ Broadcast Exchange
            │              └─ Filter
            │                 │     Condition: (d_year_4 = 2001) AND (1 = d_moy_8)
            │                 └─ TableScan tpcds100.date_dim
            │                          Where: (d_year = 2001) AND (1 = d_moy)
            │                          Outputs: d_date_sk_4:=d_date_sk, d_moy_8:=d_moy, d_year_4:=d_year
            └─ Projection
               │     Expressions: d_moy_7:=d_moy_9, expr#avg(inv_quantity_on_hand)_7:=`expr#avg(inv_quantity_on_hand)_9`, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_7:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_9`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_9` / `expr#avg(inv_quantity_on_hand)_9`), i_item_sk_7:=i_item_sk_9, w_warehouse_sk_7:=w_warehouse_sk_9
               └─ Filter
                  │     Condition: (caseWithExpression(`expr#avg(inv_quantity_on_hand)_9`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_9` / `expr#avg(inv_quantity_on_hand)_9`) > 1) AND (((d_moy_9 = 1) AND (caseWithExpression(`expr#avg(inv_quantity_on_hand)_9`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_9` / `expr#avg(inv_quantity_on_hand)_9`) > 1.5)) OR (d_moy_9 = 2))
                  └─ Aggregating
                     │     Group by: {d_moy_9, i_item_sk_9, w_warehouse_name_9, w_warehouse_sk_9}
                     │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_9:=AggNull(stddevSamp)(inv_quantity_on_hand_5), expr#avg(inv_quantity_on_hand)_9:=AggNull(avg)(inv_quantity_on_hand_5)
                     └─ Inner Join
                        │     Condition: inv_date_sk_5 == d_date_sk_5
                        ├─ Inner Join
                        │  │     Condition: inv_warehouse_sk_5 == w_warehouse_sk_9
                        │  ├─ Inner Join
                        │  │  │     Condition: inv_item_sk_5 == i_item_sk_9
                        │  │  ├─ Repartition Exchange
                        │  │  │  │     Partition by: {inv_item_sk_5}
                        │  │  │  └─ TableScan tpcds100.inventory
                        │  │  │           Outputs: inv_date_sk_5:=inv_date_sk, inv_item_sk_5:=inv_item_sk, inv_quantity_on_hand_5:=inv_quantity_on_hand, inv_warehouse_sk_5:=inv_warehouse_sk
                        │  │  └─ Repartition Exchange
                        │  │     │     Partition by: {i_item_sk_9}
                        │  │     └─ TableScan tpcds100.item
                        │  │              Outputs: i_item_sk_9:=i_item_sk
                        │  └─ Broadcast Exchange
                        │     └─ TableScan tpcds100.warehouse
                        │              Outputs: w_warehouse_name_9:=w_warehouse_name, w_warehouse_sk_9:=w_warehouse_sk
                        └─ Broadcast Exchange
                           └─ Filter
                              │     Condition: (d_year_5 = 2001) AND (2 = d_moy_9)
                              └─ TableScan tpcds100.date_dim
                                       Where: (d_year = 2001) AND (2 = d_moy)
                                       Outputs: d_date_sk_5:=d_date_sk, d_moy_9:=d_moy, d_year_5:=d_year
note: Runtime Filter is applied for 1 times.
